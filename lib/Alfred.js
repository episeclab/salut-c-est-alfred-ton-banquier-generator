// Generated by CoffeeScript 1.4.0
(function() {
  var Alfred, call, fs, path, system, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  fs = require('fs');

  path = require('path');

  _ref = require('./utils'), call = _ref.call, system = _ref.system;

  Alfred = (function() {

    function Alfred(options) {
      var _base, _ref1;
      this.options = options != null ? options : {};
      this.say = __bind(this.say, this);

      this.getDestFile = __bind(this.getDestFile, this);

      this._say = __bind(this._say, this);

      this.getWordPath = __bind(this.getWordPath, this);

      this.listVoices = __bind(this.listVoices, this);

      this.getSox = __bind(this.getSox, this);

      if ((_ref1 = (_base = this.options).voicesDirectory) == null) {
        _base.voicesDirectory = path.join(__dirname, '../voices');
      }
      return this;
    }

    Alfred.prototype.getSox = function() {
      return 'sox';
    };

    Alfred.prototype.listVoices = function(fn) {
      return fs.readdir(this.options.voicesDirectory, fn);
    };

    Alfred.prototype.getWordPath = function(word) {
      return path.join(this.options.voicesDirectory, this.options.voice, "" + word + ".wav");
    };

    Alfred.prototype._say = function(words, destFile, fn) {
      var cmd, word, _i, _len;
      if (destFile == null) {
        destFile = null;
      }
      cmd = [this.getSox()];
      for (_i = 0, _len = words.length; _i < _len; _i++) {
        word = words[_i];
        cmd.push(this.getWordPath(word));
      }
      cmd.push(destFile);
      return fn(false, cmd);
    };

    Alfred.prototype.getDestFile = function() {
      return "/tmp/test.wav";
    };

    Alfred.prototype.say = function(words, fn) {
      var destFile,
        _this = this;
      if (fn == null) {
        fn = null;
      }
      destFile = this.getDestFile();
      return this._say(words, destFile, function(err, cmd) {
        return call(cmd[0], cmd.slice(1), function(err, data) {
          console.log("Done. " + destFile);
          return system('play', [destFile]);
        });
      });
    };

    return Alfred;

  })();

  module.exports = {
    Alfred: Alfred
  };

}).call(this);
